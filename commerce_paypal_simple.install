<?php

/**
 * @file
 * Installs the tables required by Commerce PayPal simple.
 */


/**
 * Implements hook_schema().
 */
function commerce_paypal_simple_schema() {
  $schema = array();

  $schema['commerce_paypal_simple_ipn'] = array(
    'description' => 'Stores processed IPNs.',
    'fields' => array(
      'ipn_id' => array(
        'description' => 'Serial numeric ID of the IPN in the local database.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'pay_key' => array(
        'description' => 'The PayPal pay key associated with this simple payment.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'transaction_type' => array(
        'description' => 'The PayPal transaction type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'sender_email' => array(
        'description' => 'The e-mail of the payer.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'order_id' => array(
        'description' => 'The order ID the payment belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'The status of the payment at PayPal.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'fees_payer' => array(
        'description' => 'The payer of the PayPal fees.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the IPN was received.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the IPN was last updated.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'test_ipn' => array(
        'description' => 'Boolean indicating whether or not this was a test IPN sent by the Sandbox.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('ipn_id'),
    'foreign keys' => array(
      'order_id' => array(
        'table' => 'commerce_order',
        'columns'=> array('order_id' => 'order_id'),
      ),
    ),
    'indexes' => array(
      'pay_key' => array('pay_key'),
    ),
  );

  $schema['commerce_paypal_simple_ipn_transaction'] = array(
    'description' => 'Stores processed IPN transactions.',
    'fields' => array(
      'ipn_transaction_id' => array(
        'description' => 'Serial numeric ID of the IPN transaction in the local database.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'ipn_id' => array(
        'description' => 'The IPN ID the ipn transaction belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'transaction_id' => array(
        'description' => 'The payment transaction ID the ipn transaction belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'id' => array(
        'description' => 'The PayPal transaction ID.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'is_primary_receiver' => array(
        'description' => 'Whether or not the receiver specified here is the primary receiver.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'receiver' => array(
        'description' => 'The e-mail of the receiver.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'amount' => array(
        'description' => 'The payment amount of the transaction (eg. "USD 5.90").',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'gross' => array(
        'description' => 'The gross transaction amount.',
        'type' => 'numeric',
        'size' => 'normal',
        'precision' => 10,
        'scale' => 2,
        'not null' => TRUE,
        'default' => 0,
      ),
      'currency' => array(
        'description' => 'The currency code of the transaction.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'status' => array(
        'description' => 'The status of the transaction at PayPal.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('ipn_transaction_id'),
    'foreign keys' => array(
      'ipn_id' => array(
        'table' => 'commerce_paypal_simple_ipn',
        'columns'=> array('ipn_id' => 'ipn_id'),
      ),
      'transaction_id' => array(
        'table' => 'commerce_payment_transaction',
        'columns'=> array('payment_id' => 'payment_id'),
      ),
    ),
    'indexes' => array(
      'ipn_id' => array('ipn_id'),
    ),
  );

  $schema['commerce_paypal_simple_pay_chain'] = array(
    'description' => 'Stores pay chains associated with orders.',
    'fields' => array(
      'pay_chain_id' => array(
        'description' => 'Serial numeric ID of the pay chain in the local database.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'order_id' => array(
        'description' => 'The order ID the pay chain belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'pay_key' => array(
        'description' => 'The PayPal pay key associated with this pay chain.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'currency' => array(
        'description' => 'The currency code of the pay chain.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array representing the pay chain.',
      ),
    ),
    'primary key' => array('pay_chain_id'),
    'foreign keys' => array(
      'order_id' => array(
        'table' => 'commerce_order',
        'columns'=> array('order_id' => 'order_id'),
      ),
    ),
    'indexes' => array(
      'order_id' => array('order_id'),
      'pay_key' => array('pay_key'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function commerce_paypal_simple_install() {
  // Define the payment receiver field and create it
  $field = array (
    'translatable' => '0',
    'entity_types' =>
    array (
    ),
    'settings' =>
    array (
      'max_length' => '255',
    ),
    'storage' =>
    array (
      'type' => 'field_sql_storage',
      'settings' =>
      array (
      ),
      'module' => 'field_sql_storage',
      'active' => '1',
      'details' =>
      array (
        'sql' =>
        array (
          'FIELD_LOAD_CURRENT' =>
          array (
            'field_data_field_simple_receiver_email' =>
            array (
              'value' => 'field_simple_receiver_email_value',
              'format' => 'field_simple_receiver_email_format',
            ),
          ),
          'FIELD_LOAD_REVISION' =>
          array (
            'field_revision_field_simple_receiver_email' =>
            array (
              'value' => 'field_simple_receiver_email_value',
              'format' => 'field_simple_receiver_email_format',
            ),
          ),
        ),
      ),
    ),
    'foreign keys' =>
    array (
      'format' =>
      array (
        'table' => 'filter_format',
        'columns' =>
        array (
          'format' => 'format',
        ),
      ),
    ),
    'indexes' =>
    array (
      'format' =>
      array (
        0 => 'format',
      ),
    ),
    'id' => '48',
    'field_name' => 'field_simple_receiver_email',
    'type' => 'text',
    'module' => 'text',
    'active' => '1',
    'locked' => '0',
    'cardinality' => '1',
    'deleted' => '0',
    'columns' =>
    array (
      'value' =>
      array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => false,
      ),
      'format' =>
      array (
        'type' => 'varchar',
        'length' => 255,
        'not null' => false,
      ),
    ),
    'bundles' =>
    array (
      'commerce_payment_transaction' =>
      array (
        0 => 'commerce_payment_transaction',
      ),
    ),
  );
  field_create_field($field);
  // Create an instance of our field on the commerce_payment_transaction entity
  $field_instance = array (
    'label' => 'Receiver Email Address',
    'widget' =>
    array (
      'weight' => '-3',
      'type' => 'text_textfield',
      'module' => 'text',
      'active' => 1,
      'settings' =>
      array (
        'size' => '60',
      ),
    ),
    'settings' =>
    array (
      'text_processing' => '0',
      'user_register_form' => false,
    ),
    'display' =>
    array (
      'default' =>
      array (
        'label' => 'above',
        'type' => 'text_default',
        'settings' =>
        array (
        ),
        'module' => 'text',
        'weight' => -3,
      ),
    ),
    'required' => 0,
    'description' => '',
    'fences_wrapper' => '',
    'default_value' => NULL,
    'field_name' => 'field_simple_receiver_email',
    'entity_type' => 'commerce_payment_transaction',
    'bundle' => 'paypal_simple',
    'deleted' => '0',
  );
  field_create_instance($field_instance);
}

function commerce_paypal_simple_enable() {
  // Check if our field is not already created.
  if (!field_info_field('field_paypal_simple_paypal_email')) {
    $field = array(
      'field_name' => 'field_paypal_simple_paypal_email',
      'type' => 'text',
    );

    field_create_field($field);

    // Create the instance on the bundle.
    $instance = array(
      'field_name' => 'field_paypal_simple_paypal_email',
      'entity_type' => 'user',
      'label' => 'My PayPal Account Email',
      'description' => 'This email account is used for Paypal Adpative Simple Payments',
      'bundle' => 'user',
      // If you don't set the "required" property then the field wont be required by default.
      'required' => TRUE,
      'settings' => array(
        // Here you inform either or not you want this field showing up on the registration form.
        'user_register_form' => 1,
      ),
      'widget' => array(
        'type' => 'textfield',
      ),
    );

    field_create_instance($instance);
  }
}

/**
 * Implements hook_uninstall().
 */
function commerce_paypal_simple_uninstall() {
  // Queue up our field_simple_receiver_email field for deletion.
  field_delete_field('field_simple_receiver_email');
  field_delete_field('field_paypal_simple_paypal_email');
}
